# from pathlib import Path

# from aiogram import Router, types
# from aiogram.filters import Command

# from create_bot import settings

# router = Router()

# HELLO_TEXT = (
#     '<b>üéäWelcome! üì≤<a href="https://t.me/Mamoyan_shop">Mamostore</a> '
#     "- —Å–µ—Ä–≤–∏—Å –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø–æ–∫—É–ø–æ–∫ –∏ —É—Å–ª—É–≥</b>"
# )

# file = Path(__file__).parent.parent.parent / "static" / "main.png"
# HELLO_IMAGE = types.FSInputFile(file)
# webapp_button = None
# if settings.CUSTOMER_WEBAPP_URL:
#     webapp_button = types.InlineKeyboardMarkup(
#         inline_keyboard=[
#             [
#                 types.InlineKeyboardButton(
#                     text="–ú–∞–≥–∞–∑–∏–Ω",
#                     web_app=types.WebAppInfo(url=str(settings.CUSTOMER_WEBAPP_URL)),
#                 )
#             ]
#         ]
#     )


# @router.message(Command("start"))
# async def start_command(message: types.Message):
#     await message.answer_photo(
#         HELLO_IMAGE, caption=HELLO_TEXT, reply_markup=webapp_button
#     )

#     if settings.CUSTOMER_WEBAPP_URL:
#         await message.bot.set_chat_menu_button(
#             message.from_user.id,
#             menu_button=types.MenuButtonWebApp(
#                 text="–ú–∞–≥–∞–∑–∏–Ω",
#                 web_app=types.WebAppInfo(
#                     url=str(settings.CUSTOMER_WEBAPP_URL),
#                 ),
#             ),
#         )
import logging
from pathlib import Path

from aiogram import Router, types
from aiogram.filters import Command, CommandObject

from create_bot import settings, bot
from customer_api.client import CustomerAPIClient
from customer_api.exceptions import CustomerAPIError

router = Router()
api_client = CustomerAPIClient()
logger = logging.getLogger(__name__)

HELLO_TEXT = (
    '<b>üéäWelcome! üì≤<a href="https://t.me/Mamoyan_shop">Mamostore</a> '
    "- —Å–µ—Ä–≤–∏—Å –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø–æ–∫—É–ø–æ–∫ –∏ —É—Å–ª—É–≥</b>"
)

file = Path(__file__).parent.parent.parent / "static" / "main.png"
HELLO_IMAGE = types.FSInputFile(file)
webapp_button = None
if settings.CUSTOMER_WEBAPP_URL:
    webapp_button = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text="–ú–∞–≥–∞–∑–∏–Ω",
                    web_app=types.WebAppInfo(url=str(settings.CUSTOMER_WEBAPP_URL)),
                )
            ]
        ]
    )


@router.message(Command("start"))
async def start_command(message: types.Message, command: CommandObject = None):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä start
    """
    user_id = message.from_user.id
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer_photo(
        HELLO_IMAGE, caption=HELLO_TEXT, reply_markup=webapp_button
    )

    if settings.CUSTOMER_WEBAPP_URL:
        await message.bot.set_chat_menu_button(
            user_id,
            menu_button=types.MenuButtonWebApp(
                text="–ú–∞–≥–∞–∑–∏–Ω",
                web_app=types.WebAppInfo(
                    url=str(settings.CUSTOMER_WEBAPP_URL),
                ),
            ),
        )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, –µ—Å–ª–∏ –µ—Å—Ç—å
    if command and command.args:
        referral_code = command.args.strip()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º: {referral_code}")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        try:
            result = await api_client.apply_referral_code(user_id, referral_code)
            logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞: {result}")
            
            if result.get("status"):
                logger.info(f"–£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ {referral_code} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            else:
                msg = result.get("message", "")
                if msg:
                    logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ {referral_code}: {msg}")
                else:
                    logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ {referral_code}. –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.")
        except Exception as e:
            logger.exception(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: {str(e)}")
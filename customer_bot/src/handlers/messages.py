# from contextlib import suppress

# from aiogram import Router, types
# from aiogram.fsm.context import FSMContext

# from src.states import BotState
# from src import keyboards as kb
# from customer_api.client import CustomerAPIClient

# router = Router()
# api_client = CustomerAPIClient()


# @router.message(BotState.INPUT_LOGIN_CODE)
# async def receive_login_code_handler(message: types.Message, state: FSMContext):
#     if not (message.text.isdigit() and len(message.text) == 6):
#         await message.answer(
#             "–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 6 —Ü–∏—Ñ—Ä", reply_markup=kb.CANCEL_INPUT_LOGIN_CODE_KB
#         )
#         return

#     data = await state.get_data()
#     result = await api_client.save_new_login_code(data.get("line_id"), message.text)
#     code_message_id = data.get("code_message_id")
#     await state.set_state()
#     await state.update_data(line_id=None, code_message_id=None)
#     await message.answer("–ö–æ–¥ –ø—Ä–∏–Ω—è—Ç" if result else "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–¥")

#     with suppress(Exception):
#         await message.bot.delete_message(message.chat.id, code_message_id)
from contextlib import suppress

from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext

from src.states import BotState
from src import keyboards as kb
from customer_api.client import CustomerAPIClient

router = Router()
api_client = CustomerAPIClient()


@router.message(BotState.INPUT_LOGIN_CODE)
async def receive_login_code_handler(message: types.Message, state: FSMContext):
    if not (message.text.isdigit() and len(message.text) == 6):
        await message.answer(
            "–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 6 —Ü–∏—Ñ—Ä", reply_markup=kb.CANCEL_INPUT_LOGIN_CODE_KB
        )
        return

    data = await state.get_data()
    result = await api_client.save_new_login_code(data.get("line_id"), message.text)
    code_message_id = data.get("code_message_id")
    await state.set_state()
    await state.update_data(line_id=None, code_message_id=None)
    await message.answer("–ö–æ–¥ –ø—Ä–∏–Ω—è—Ç" if result else "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–¥")

    with suppress(Exception):
        await message.bot.delete_message(message.chat.id, code_message_id)


@router.message(F.text == "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞")
async def referral_program_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"""
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
    result = await api_client.get_referral_link(user_id)
    
    if result.get("status") and result.get("link"):
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
                        callback_data="ref_stats"
                    )
                ]
            ]
        )
        
        text = (
            "üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
            "–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n\n"
            f"üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n{result['link']}\n\n"
            "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n"
            "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º\n"
            "2. –ö–æ–≥–¥–∞ –¥—Ä—É–≥ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ —Å–æ–≤–µ—Ä—à–∏—Ç –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å\n"
            "3. –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –±–æ–Ω—É—Å–æ–≤ –ø–æ–ª—É—á–∏—Ç–µ\n\n"
            "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤."
        )
        
        await message.answer(text, reply_markup=keyboard)
    else:
        await message.answer(
            "üòî –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
version: "3"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - "pg_data:/var/lib/postgresql/data"

  backend:
    build: ./backend
    restart: unless-stopped
    command: gunicorn config.wsgi:application -w ${DJANGO_WORKERS_COUNT:-1}
    environment:
      BOT_TOKEN: $BOT_TOKEN
      DB_HOST: postgres
      DB_NAME: $POSTGRES_DB
      DB_USER: $POSTGRES_USER
      DB_PASSWORD: $POSTGRES_PASSWORD
      DJANGO_DEBUG: $DJANGO_DEBUG
      DJANGO_CSRF_TRUSTED_ORIGINS: $DJANGO_CSRF_TRUSTED_ORIGINS
      SENTRY_DSN: $SENTRY_DSN
    volumes:
      - "${DJANGO_MEDIA_VOLUME:-./backend/media}:/app/media"
      - "${DJANGO_STATIC_VOLUME:-./backend/static}:/app/static"
    depends_on:
      - postgres

  nginx:
    image: nginx:1.22-alpine-slim
    restart: unless-stopped
    ports:
      - "127.0.0.1:8009:80"
    environment:
      NGINX_SERVER_NAME: $NGINX_SERVER_NAME
    depends_on:
      - backend
    volumes:
      - "./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro"
      - "${DJANGO_MEDIA_VOLUME:-./backend/media}:/var/www/mediafiles:ro"
      - "${DJANGO_STATIC_VOLUME:-./backend/static}:/var/www/staticfiles:ro"

volumes:
  pg_data: {}
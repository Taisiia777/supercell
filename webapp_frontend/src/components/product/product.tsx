//@ts-nocheck
'use client'
import styles from "./product.module.scss"
import {IProduct} from "@/types/products.interface";
import Image from "next/image";
import PrimaryButton from "@/components/ui/primary-button/primary-button";
import {useCart} from "@/components/store/store";
import {useEffect, useState} from "react";
import {Shimmer} from "react-shimmer";
import shimmer from "@/components/ui/shimmer/shimmer.module.scss";
import ActionButtons from "@/components/ui/action-buttons/action-buttons";
import {CartItem} from "@/types/store.interface";

export default function Product(props: { data: IProduct }) {

    const {addItem, items} = useCart()
    const [clientItems, setClientItems] = useState<CartItem[]>([]); // Замените `ClientItem` на ваш фактический тип

    useEffect(() => {
        setClientItems(items)
    }, [items])

    const cartItem = clientItems.find((i) => i.id === props.data.id)
    const count = cartItem ? cartItem.count : 0

    const [isLoading, setLoading] = useState(true);

    useEffect(() => {
        setLoading(true);
        const timeoutId = setTimeout(() => {
            setLoading(false);
        }, 1000);

        return () => clearTimeout(timeoutId);
    }, []);

    
    return (
        <div className={styles.product}>
            <div className={styles.img}>
                {/* <Image src={props.data.images[0].original} alt={props.data.title} objectFit="cover" fill quality={100} unoptimized={true}/> */}
                <Image 
  src={props.data.images[0].original}
  alt={props.data.title}
  fill
  style={{ objectFit: 'contain' }}
  quality={100}
  unoptimized={true}
  loading="eager"
  priority
/>
            </div>
            <div className={styles.card}>
                <div className={styles.name}>
                    <div className={styles.title}>
                        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M5.10514 5.10514H5.11528M8.61445 1H5.86559C4.16247 1 3.31091 1 2.66041 1.33145C2.08821 1.623 1.623 2.08821 1.33145 2.66041C1 3.31091 1 4.16247 1 5.86559V8.61445C1 9.35817 1 9.73009 1.08402 10.0801C1.15852 10.3904 1.28138 10.687 1.44812 10.9592C1.63618 11.266 1.89915 11.5289 2.4251 12.0549L7.18933 16.8191C8.39357 18.0234 8.99579 18.6256 9.69005 18.8511C10.3009 19.0496 10.9587 19.0496 11.5696 18.8511C12.2638 18.6256 12.8661 18.0234 14.0703 16.8191L16.8191 14.0703C18.0234 12.8661 18.6256 12.2638 18.8511 11.5696C19.0496 10.9587 19.0496 10.3009 18.8511 9.69005C18.6256 8.99579 18.0234 8.39357 16.8191 7.18933L12.0549 2.4251C11.5289 1.89915 11.266 1.63618 10.9592 1.44812C10.687 1.28138 10.3904 1.15852 10.0801 1.08402C9.73009 1 9.35817 1 8.61445 1ZM5.61197 5.10514C5.61197 5.38506 5.38506 5.61197 5.10514 5.61197C4.82523 5.61197 4.59831 5.38506 4.59831 5.10514C4.59831 4.82523 4.82523 4.59831 5.10514 4.59831C5.38506 4.59831 5.61197 4.82523 5.61197 5.10514Z" stroke="#FFC567" strokeLinecap="round" strokeLinejoin="round" />
                        </svg>
                        <span>{props.data.categories}</span>
                    </div>
                    <div className={styles.type}>
                        {props.data.login_type === "EMAIL_CODE" ? (
                            <>
                                <svg width="17" height="18" viewBox="0 0 17 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M2.3741 3.16816C2.15625 3.15959 1.93992 3.20548 1.74784 3.30101C1.55576 3.39655 1.39501 3.53821 1.28247 3.7111C0.444221 4.95918 4.39913e-05 6.39953 0.000206038 7.86919C0.000206038 8.16732 0.128137 8.45324 0.355857 8.66405C0.583576 8.87487 0.89243 8.9933 1.21447 8.9933C1.53652 8.9933 1.84537 8.87487 2.07309 8.66405C2.30081 8.45324 2.42874 8.16732 2.42874 7.86919C2.42874 6.81927 2.74688 5.78958 3.34552 4.89816C3.46086 4.73167 3.52671 4.53996 3.53642 4.34237C3.54613 4.14478 3.49935 3.94832 3.40081 3.77282C3.30226 3.59732 3.15545 3.449 2.97518 3.34284C2.79491 3.23667 2.58757 3.17642 2.3741 3.16816Z" fill="#6AEC3D" />
                                    <path fillRule="evenodd" clipRule="evenodd" d="M1.19496 6.72936C0.873331 6.7341 0.566872 6.85678 0.342857 7.07049C0.118842 7.28419 -0.00442273 7.57145 0.00012132 7.86921V13.5606C0.00012132 13.8587 0.128053 14.1446 0.355772 14.3554C0.583492 14.5663 0.892346 14.6847 1.21439 14.6847C1.53643 14.6847 1.84529 14.5663 2.07301 14.3554C2.30073 14.1446 2.42866 13.8587 2.42866 13.5606V7.86921C2.43095 7.71875 2.40059 7.56939 2.33938 7.42998C2.27816 7.29058 2.18733 7.16398 2.07228 7.05768C1.95723 6.95138 1.82029 6.86754 1.66959 6.81115C1.51889 6.75475 1.35749 6.72694 1.19496 6.72936Z" fill="#6AEC3D" />
                                    <path d="M8.50008 3.37274C5.83112 3.37274 3.64301 5.39951 3.64301 7.86918C3.64301 8.16732 3.77094 8.45324 3.99866 8.66405C4.22638 8.87486 4.53523 8.99329 4.85727 8.99329C5.17932 8.99329 5.48817 8.87486 5.71589 8.66405C5.94361 8.45324 6.07154 8.16732 6.07154 7.86918C6.07154 6.61468 7.14374 5.62096 8.50008 5.62096C9.8552 5.62096 10.9286 6.61468 10.9286 7.86918C10.9286 8.16732 11.0565 8.45324 11.2843 8.66405C11.512 8.87486 11.8208 8.99329 12.1429 8.99329C12.4649 8.99329 12.7738 8.87486 13.0015 8.66405C13.2292 8.45324 13.3572 8.16732 13.3572 7.86918C13.3572 5.39951 11.1678 3.37274 8.50008 3.37274Z" fill="#6AEC3D" />
                                    <path fillRule="evenodd" clipRule="evenodd" d="M8.48057 6.72936C8.15894 6.7341 7.85248 6.85678 7.62846 7.07049C7.40445 7.28419 7.28118 7.57145 7.28573 7.86921V13.4898C7.28573 13.4898 7.28451 14.1586 7.46058 14.9736C7.63665 15.7897 7.96207 16.8295 8.85578 17.6568C8.96779 17.7642 9.10178 17.8498 9.24992 17.9088C9.39807 17.9677 9.5574 17.9987 9.71863 18C9.87986 18.0013 10.0398 17.9728 10.189 17.9163C10.3382 17.8598 10.4738 17.7763 10.5878 17.6708C10.7018 17.5652 10.792 17.4397 10.853 17.3016C10.9141 17.1634 10.9448 17.0154 10.9434 16.8661C10.942 16.7169 10.9085 16.5694 10.8449 16.4322C10.7812 16.2951 10.6887 16.171 10.5728 16.0673C10.251 15.7706 9.96926 15.1242 9.84176 14.5352C9.71426 13.945 9.71426 13.4898 9.71426 13.4898V7.86921C9.71656 7.71875 9.6862 7.56939 9.62498 7.42998C9.56377 7.29058 9.47294 7.16398 9.35789 7.05768C9.24283 6.95138 9.1059 6.86754 8.9552 6.81115C8.80449 6.75475 8.64309 6.72694 8.48057 6.72936ZM4.83776 6.72936C4.51613 6.7341 4.20967 6.85678 3.98566 7.07049C3.76164 7.28419 3.63838 7.57145 3.64292 7.86921V8.99332C3.64292 9.29145 3.77085 9.57738 3.99857 9.78819C4.22629 9.999 4.53515 10.1174 4.85719 10.1174C5.17923 10.1174 5.48809 9.999 5.71581 9.78819C5.94353 9.57738 6.07146 9.29145 6.07146 8.99332V7.86921C6.07375 7.71875 6.04339 7.56939 5.98218 7.42998C5.92096 7.29058 5.83013 7.16398 5.71508 7.05768C5.60003 6.95138 5.46309 6.86754 5.31239 6.81115C5.16169 6.75475 5.00029 6.72694 4.83776 6.72936ZM4.83776 11.2258C4.51613 11.2305 4.20967 11.3532 3.98566 11.5669C3.76164 11.7806 3.63838 12.0679 3.64292 12.3657V15.738C3.64292 16.0361 3.77085 16.322 3.99857 16.5328C4.22629 16.7437 4.53515 16.8621 4.85719 16.8621C5.17923 16.8621 5.48809 16.7437 5.71581 16.5328C5.94353 16.322 6.07146 16.0361 6.07146 15.738V12.3657C6.07375 12.2152 6.04339 12.0658 5.98218 11.9264C5.92096 11.787 5.83013 11.6604 5.71508 11.5541C5.60003 11.4478 5.46309 11.364 5.31239 11.3076C5.16169 11.2512 5.00029 11.2234 4.83776 11.2258ZM12.1234 6.72936C11.8017 6.7341 11.4953 6.85678 11.2713 7.07049C11.0473 7.28419 10.924 7.57145 10.9285 7.86921V13.4898C10.9285 13.4898 10.9395 13.9844 11.141 14.5475C11.4214 15.2977 11.8861 15.9772 12.4986 16.5327C12.6106 16.6401 12.7446 16.7257 12.8927 16.7846C13.0409 16.8436 13.2002 16.8746 13.3614 16.8759C13.5227 16.8772 13.6826 16.8487 13.8318 16.7922C13.981 16.7357 14.1166 16.6522 14.2306 16.5467C14.3446 16.4411 14.4348 16.3156 14.4958 16.1775C14.5569 16.0393 14.5876 15.8913 14.5862 15.742C14.5848 15.5928 14.5513 15.4453 14.4877 15.3081C14.424 15.171 14.3315 15.0469 14.2156 14.9432C13.7505 14.5138 13.5477 14.1159 13.4469 13.8371C13.3449 13.5572 13.3571 13.4898 13.3571 13.4898V7.86921C13.3594 7.71875 13.329 7.56939 13.2678 7.42998C13.2066 7.29058 13.1157 7.16398 13.0007 7.05768C12.8856 6.95138 12.7487 6.86754 12.598 6.81115C12.4473 6.75475 12.2859 6.72694 12.1234 6.72936ZM15.7662 6.72936C15.4445 6.7341 15.1381 6.85678 14.9141 7.07049C14.6901 7.28419 14.5668 7.57145 14.5713 7.86921V8.99332C14.5713 9.29145 14.6993 9.57738 14.927 9.78819C15.1547 9.999 15.4636 10.1174 15.7856 10.1174C16.1076 10.1174 16.4165 9.999 16.6442 9.78819C16.8719 9.57738 16.9999 9.29145 16.9999 8.99332V7.86921C17.0022 7.71875 16.9718 7.56939 16.9106 7.42998C16.8494 7.29058 16.7586 7.16398 16.6435 7.05768C16.5284 6.95138 16.3915 6.86754 16.2408 6.81115C16.0901 6.75475 15.9287 6.72694 15.7662 6.72936Z" fill="#6AEC3D" />
                                    <path d="M8.58741 0.000422859C7.10552 -0.0138022 5.6454 0.331101 4.35204 1.00088C4.21275 1.07277 4.09013 1.16936 3.99116 1.28512C3.89219 1.40089 3.81882 1.53356 3.77524 1.67558C3.73166 1.81759 3.71872 1.96616 3.73717 2.1128C3.75561 2.25944 3.80507 2.40129 3.88273 2.53023C3.96038 2.65918 4.06472 2.7727 4.18977 2.86432C4.31481 2.95594 4.45813 3.02386 4.61154 3.06421C4.76494 3.10455 4.92542 3.11653 5.08383 3.09945C5.24223 3.08238 5.39545 3.03659 5.53474 2.9647C6.45853 2.48583 7.50158 2.23907 8.56028 2.24893C9.61898 2.25879 10.6565 2.52493 11.5697 3.02091C12.4836 3.51619 13.2415 4.22433 13.7681 5.07489C14.2947 5.92546 14.5716 6.88883 14.5713 7.86919C14.5713 8.16733 14.6993 8.45325 14.927 8.66406C15.1547 8.87487 15.4636 8.9933 15.7856 8.9933C16.1076 8.9933 16.4165 8.87487 16.6442 8.66406C16.8719 8.45325 16.9999 8.16733 16.9999 7.86919C16.9992 6.49687 16.6111 5.14854 15.8742 3.95781C15.1372 2.76708 14.077 1.77528 12.7985 1.08069C11.521 0.38687 10.0697 0.014455 8.58863 0.000422859H8.58741Z" fill="#6AEC3D" />
                                    <path d="M16.9999 12.3656C16.9999 12.6638 16.872 12.9497 16.6443 13.1605C16.4166 13.3713 16.1077 13.4897 15.7857 13.4897C15.4636 13.4897 15.1548 13.3713 14.927 13.1605C14.6993 12.9497 14.5714 12.6638 14.5714 12.3656C14.5714 12.0675 14.6993 11.7816 14.927 11.5708C15.1548 11.3599 15.4636 11.2415 15.7857 11.2415C16.1077 11.2415 16.4166 11.3599 16.6443 11.5708C16.872 11.7816 16.9999 12.0675 16.9999 12.3656Z" fill="#6AEC3D" />
                                </svg>
                                <span>С входом</span>
                            </>
                        ) : (
                            <>
                                <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.125 3.25H3.375C2.06332 3.25 1 4.25736 1 5.5V16.75C1 17.9927 2.06332 19 3.375 19H15.25C16.5617 19 17.625 17.9927 17.625 16.75V12.25M12.875 1H20M20 1V7.75M20 1L8.125 12.25" stroke="#FDB834" strokeLinecap="round" strokeLinejoin="round" />
                                </svg>
                            <span>Без входа</span>
                            </>
                        )}
                    </div>
                </div>
                <h3 className={styles.product_name}>{props.data.title}</h3>
                <h4 className={styles.price}>{props.data.price.incl_tax} ₽</h4>
                {props.data.description && <div dangerouslySetInnerHTML={{__html: props.data.description}} className={styles.desc}/>}

                <div className={styles.add}>
                    {isLoading ? (
                        <Shimmer width={120} height={49} className={`${shimmer.shimmer_btn} shimmer`} />
                    ) : count < 1 ? (
                        <PrimaryButton title="В корзину" onClick={() => addItem(props.data.id, props.data.game)} />
                    ) : (
                        <ActionButtons id={props.data.id} count={count} minHeightValue={49} game={props.data.game}/>
                    )}
                </div>
            </div>
        </div>
    )
}